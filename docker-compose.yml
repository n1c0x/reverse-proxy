version: "3"
services:

# Webserver
  www1:
    image: nginx:alpine
    container_name: www1
    hostname: www1
    volumes:
     - "./web/default.conf:/etc/nginx/conf.d/default.conf"
     - "./web/data:/usr/share/nginx/html"
     - "./web/www1/logs:/var/log/nginx"
    ports:
     - "8081:80"
    networks:
     - internal
    depends_on:
      - "php"

  www2:
    image: nginx:alpine
    container_name: www2
    volumes:
     - "./web/default.conf:/etc/nginx/conf.d/default.conf"
     - "./web/data:/usr/share/nginx/html"
     - "./web/www2/logs:/var/log/nginx"
    ports:
     - "8082:80"
    networks: 
     - internal
    depends_on:
      - "php"

  www3:
    image: nginx:alpine
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    container_name: www3
    volumes:
     - "./web/default.conf:/etc/nginx/conf.d/default.conf"
     - "./web/data:/usr/share/nginx/html"
     - "./web/www3/logs:/var/log/nginx"
    ports:
     - "8083:80"
    networks: 
     - internal
    depends_on:
      - "php"

  www4:
    image: nginx:alpine
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    container_name: www4
    volumes:
     - "./web/default.conf:/etc/nginx/conf.d/default.conf"
     - "./web/data:/usr/share/nginx/html"
     - "./web/www4/logs:/var/log/nginx"
    ports:
     - "8084:80"
    networks: 
     - internal
    depends_on:
      - "php"

  www5:
    image: nginx:alpine
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    container_name: www5
    volumes:
     - "./web/default.conf:/etc/nginx/conf.d/default.conf"
     - "./web/data:/usr/share/nginx/html"
     - "./web/www5/logs:/var/log/nginx"
    ports:
     - "8085:80"
    networks: 
     - internal
    depends_on:
      - "php"

  www6:
    image: nginx:alpine
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    container_name: www6
    volumes:
     - "./web/default.conf:/etc/nginx/conf.d/default.conf"
     - "./web/data:/usr/share/nginx/html"
     - "./web/www6/logs:/var/log/nginx"
    ports:
     - "8086:80"
    networks: 
     - internal
    depends_on:
      - "php"

# PHP
  php:
    # image: php:fpm-alpine
    build:
      context: php
      dockerfile: Dockerfile
    container_name: php
    volumes:
      - ./web/data:/usr/share/nginx/html
      - ./web/logs/php.log:/var/log/fpm-php.www.log
    networks:
      - internal

# Database
  db:    
    image: mariadb
    container_name: db
    volumes: 
      - ./db/data:/var/lib/mysql
    environment:  
      MYSQL_ROOT_PASSWORD: fox-db-pw
      MYSQL_DATABASE: fox-db
    networks:
      - internal

# Reverse proxy
  rp:
    image: haproxytech/haproxy-alpine:latest
    container_name: rp
    volumes:
      - "./rp:/usr/local/etc/haproxy:ro"
    ports:
      - "8080:80"
      - "8404:8404"
    depends_on:
      - "www1"
      - "www2"
      - "www3"
      - "www4"
      - "www5"
      - "www6"
    networks:
      - internal
      - default

# Prometheus exporter
  nginx-prometheus-exporter-www1:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx-prometheus-exporter-www1
    environment:
     - SCRAPE_URI=http://www1/nginx_status
    ports:
     - '9111:9113'
    depends_on:
      - www1
    networks: 
     - internal

  nginx-prometheus-exporter-www2:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx-prometheus-exporter-www2
    environment:
     - SCRAPE_URI=http://www2/nginx_status
    ports:
     - '9112:9113'
    depends_on:
      - www2
    networks: 
     - internal

  nginx-prometheus-exporter-www3:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx-prometheus-exporter-www3
    environment:
     - SCRAPE_URI=http://www3/nginx_status
    ports:
     - '9113:9113'
    depends_on:
      - www3
    networks: 
     - internal

  nginx-prometheus-exporter-www4:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx-prometheus-exporter-www4
    environment:
     - SCRAPE_URI=http://www4/nginx_status
    ports:
     - '9114:9113'
    depends_on:
      - www4
    networks: 
     - internal

  nginx-prometheus-exporter-www5:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx-prometheus-exporter-www5
    environment:
     - SCRAPE_URI=http://www5/nginx_status
    ports:
     - '9115:9113'
    depends_on:
      - www5
    networks: 
     - internal

  nginx-prometheus-exporter-www6:
    image: nginx/nginx-prometheus-exporter
    container_name: nginx-prometheus-exporter-www6
    environment:
     - SCRAPE_URI=http://www6/nginx_status
    ports:
     - '9116:9113'
    depends_on:
      - www6
    networks: 
     - internal

  prometheus:
    image: prom/prometheus:v2.49.1
    container_name: prometheus
    volumes:
      - "./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
    ports:
     - '9090:9090'
    depends_on:
      - rp
    networks: 
     - internal
     - default


  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - 3000:3000
    volumes:
      - grafana-volume:/var/lib/grafana  
    networks: 
     - internal
     - default

volumes:
  grafana-volume:
  portainer_data:
  db-data:

networks:
  internal:
    driver: bridge